# 888       888        d8888 8888888b.  888b    888 8888888 888b    888  .d8888b.   888 888 888
# 888   o   888       d88888 888   Y88b 8888b   888   888   8888b   888 d88P  Y88b  888 888 888
# 888  d8b  888      d88P888 888    888 88888b  888   888   88888b  888 888    888  888 888 888
# 888 d888b 888     d88P 888 888   d88P 888Y88b 888   888   888Y88b 888 888         888 888 888
# 888d88888b888    d88P  888 8888888P"  888 Y88b888   888   888 Y88b888 888  88888  888 888 888
# 88888P Y88888   d88P   888 888 T88b   888  Y88888   888   888  Y88888 888    888  Y8P Y8P Y8P
# 8888P   Y8888  d8888888888 888  T88b  888   Y8888   888   888   Y8888 Y88b  d88P   "   "   " 
# 888P     Y888 d88P     888 888   T88b 888    Y888 8888888 888    Y888  "Y8888P88  888 888 888
# 
# 
# This CMakeLists file is generated by script.
# DON'T modify manually!

cmake_minimum_required( VERSION 2.8 )

project( rk3399-face-detect-db-test )

set( CMAKE_CXX_FLAGS "-std=c++11" )
set( CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -DDEBUG" )
set( CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -DRELEASE" )

link_directories(
    "${CMAKE_CURRENT_SOURCE_DIR}/../build/release"
    "${CMAKE_CURRENT_SOURCE_DIR}/../build/debug"
    "${CMAKE_CURRENT_SOURCE_DIR}/../libs" )
find_package( OpenCV REQUIRED )
find_package( Threads REQUIRED )
file(GLOB_RECURSE CompileWithFiles . 
    "utilities/*.cpp"
    "utilities/*.cc"
    "utilities/*.c" )

option(CMAKE_FOR_ARM "Set this variable to ON if you compile this project on arm board" OFF)
if (CMAKE_FOR_ARM)
    message("CMake for aarch64(arm) platform ...")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DFOR_ARM")
endif()


# ======================
# Unit tests:
option(CMAKE_TEST_UNIT "Enable compile unit tests" OFF)
if (CMAKE_TEST_UNIT)
message ( STATUS "Compile: enabled CMAKE_TEST_UNIT")
add_executable( sizeof_structures_unit.test ./unit/sizeof_structures.cc ${CompileWithFiles} )

add_executable( database_init_unit.test ./unit/database_init.cc ${CompileWithFiles}
    ../src/utils/fs.cc
    ../src/log/methods.cc
    # ../src/storage/*.cc
    ../src/storage/blank_space_manager.cc
    ../src/storage/encoder.cc
    ../src/storage/hash.cc
    ../src/storage/item_reader.cc
    ../src/storage/item_writer.cc
    ../src/storage/main.cc
    ../src/global/configurations.cc )

add_executable( log_module_unit.test ./unit/log_test.cc ${CompileWithFiles}
    ../src/log/methods.cc )

add_executable( utils_fs_module_unit.test ./unit/utils_fs_test.cc ${CompileWithFiles}
    ../src/utils/fs.cc
    ../src/log/methods.cc )

add_executable( utils_memory_module_unit.test ./unit/utils_memory.cc ${CompileWithFiles}
    ../src/log/methods.cc )

add_executable( hash_user_item_unit.test ./unit/hash_user_item.cc ${CompileWithFiles}
    ../../src/storage/hash.cc
    ../../src/log/methods.cc )

add_executable( capture_module_unit.test ./unit/captures_test.cc ${CompileWithFiles}
    ../src/media/capture.cc
    ../src/log/methods.cc
    ../src/utils/convert2string.cc )
target_link_libraries( capture_module_unit.test ${OpenCV_LIBS} )
endif()



# ======================
# GUI tests:
option(CMAKE_TEST_GUI "Enable compile gui tests" OFF)
if (CMAKE_TEST_GUI)
message ( STATUS "Compile: enabled CMAKE_TEST_GUI")
add_executable( cv_img_window_test.gui ./gui/cv_img_win_test.cc ${CompileWithFiles} )
target_link_libraries( cv_img_window_test.gui ${OpenCV_LIBS} )

add_executable( utils_opencv_test.gui ./gui/utils_opencv_test.cc ${CompileWithFiles}
    ../src/utils/convert2string.cc
    ../src/utils/opencv.cc
    ../src/log/methods.cc )
target_link_libraries( utils_opencv_test.gui ${OpenCV_LIBS} )

add_executable( utils_opencv_face_test.gui ./gui/utils_opencv_face_test.cc ${CompileWithFiles}
    ../src/utils/convert2string.cc
    ../src/utils/opencv.cc
    ../src/log/methods.cc )
target_link_libraries( utils_opencv_face_test.gui ${OpenCV_LIBS} )

add_executable( call_debug_so_get_frame_test.gui ./gui/call_debug_so_get_frame.cc ${CompileWithFiles} )
target_link_libraries( call_debug_so_get_frame_test.gui rk3399_face_detect_db_debug )
target_link_libraries( call_debug_so_get_frame_test.gui ${OpenCV_LIBS} )
endif()



# ======================
# Once tests:
option(CMAKE_TEST_ONCE "Enable compile once tests" OFF)
if (CMAKE_TEST_ONCE)
message ( STATUS "Compile: enabled CMAKE_TEST_ONCE")
add_executable( cpp_malloc_sizeof_once.test ./once/cpp_base/cpp_malloc_sizeof_test.cc ${CompileWithFiles} )

add_executable( cpp_pointer_as_parameter_once.test ./once/cpp_base/cpp_pointer_as_parameter.cc ${CompileWithFiles} )

add_executable( cpp_thread_once.test ./once/cpp_base/cpp_thread_test.cc ${CompileWithFiles} )
target_link_libraries( cpp_thread_once.test ${CMAKE_THREAD_LIBS_INIT} )

add_executable( cpp_base_once.test ./once/cpp_base/cpp_test.cc ${CompileWithFiles} )

add_executable( jna_struct_test_once.test ./once/jna/jna_struct_test_so.cc ${CompileWithFiles} )
add_library( jna_struct_test SHARED ./once/jna/jna_struct_test_so.cc ${CompileWithFiles} )

add_executable( storage_once.test ./once/storage/main.cc ${CompileWithFiles}
    # ../src/storage/*.cc
    ../src/storage/blank_space_manager.cc
    ../src/storage/encoder.cc
    ../src/storage/hash.cc
    ../src/storage/item_reader.cc
    ../src/storage/item_writer.cc
    ../src/storage/main.cc
    # ../src/log/*.cc
    ../src/log/methods.cc
    ../src/utils/fs.cc
    ../src/global/configurations.cc )

add_executable( call_debug_so_once.test ./once/call_debug_so_test.cc ${CompileWithFiles} )
target_link_libraries( call_debug_so_once.test rk3399_face_detect_db_debug )

add_executable( call_release_so_once.test ./once/call_release_so_test.cc ${CompileWithFiles} )
target_link_libraries( call_release_so_once.test rk3399_face_detect_db_release )

add_executable( random_access_file_once.test ./once/random_access_file.cc ${CompileWithFiles} )

if (CMAKE_FOR_ARM)
  add_executable( call_api_on_arm_once.test ./once/arm64-only/call_api_on_arm.cc ${CompileWithFiles} )
  target_link_libraries( call_api_on_arm_once.test rk3399_face_detect_db_debug )
endif()
endif()



